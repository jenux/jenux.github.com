<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Note | Jenux]]></title>
  <link href="http://jenux.github.io/blog/categories/note/atom.xml" rel="self"/>
  <link href="http://jenux.github.io/"/>
  <updated>2013-07-03T06:59:53+08:00</updated>
  <id>http://jenux.github.io/</id>
  <author>
    <name><![CDATA[Jenux]]></name>
    <email><![CDATA[ijenux@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TextMate随记(二)]]></title>
    <link href="http://jenux.github.io/blog/2011/08/09/TextMate_knowlage_2/"/>
    <updated>2011-08-09T00:00:00+08:00</updated>
    <id>http://jenux.github.io/blog/2011/08/09/TextMate_knowlage_2</id>
    <content type="html"><![CDATA[<p><a href="http://goo.gl/q8GMJ">Textmate.Power.Editing.for.the.Mac</a>随手记</p>

<p>Chapter3</p>

<!-- more -->


<h1>Moving around</h1>

<table>
<thead>
<tr>
<th></th>
<th align="left"> Keystroke </th>
<th align="left"> Caret Movement        </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"> ↑         </td>
<td align="left"> Up one line           |</td>
</tr>
<tr>
<td></td>
<td align="left"> ↓         </td>
<td align="left"> Down one line         |</td>
</tr>
<tr>
<td></td>
<td align="left"> ←         </td>
<td align="left"> Left one character    |</td>
</tr>
<tr>
<td></td>
<td align="left"> →         </td>
<td align="left"> Right one character   |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌘↑        </td>
<td align="left"> Beginning of document |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌘↓        </td>
<td align="left"> End of document       |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌘←        </td>
<td align="left"> Beginning of line     |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌘→        </td>
<td align="left"> End of line           |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌥↑        </td>
<td align="left"> Beginning of column   |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌥↓        </td>
<td align="left"> End of column         |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌥←        </td>
<td align="left"> Beginning of word     |</td>
</tr>
<tr>
<td></td>
<td align="left"> ⌥→        </td>
<td align="left"> End of word           |</td>
</tr>
</tbody>
</table>


<h1>Moving to a Line, Symbol or Bookmark</h1>

<ul>
<li>⌘L, go to line</li>
<li>⌂ ⌘T, go to Symbol</li>
<li>⌘F2, add bookmark</li>
<li>F2, next bookmark</li>
<li>⌂F2, previous bookmark</li>
</ul>


<p>Menu &ndash;> navigation to find these command</p>

<h1>Folding Sections of Code</h1>

<ul>
<li>View->Gutter->Foldings</li>
<li>F1 to trigger</li>
<li>Toggle Foldings at level(⌥ ⌘0-9)</li>
</ul>


<p>Menu &ndash;> View to find these command</p>

<h1>Making Selections</h1>

<ul>
<li>Move key and ⌂ to select</li>
<li>⌂ ⌘L, current line selector</li>
<li>⌃W, current word selector</li>
<li>⌃⌥B, current scope selector</li>
</ul>


<p>Menu &ndash;> Edit &ndash;> Select to find these command</p>

<h1>Column Selections</h1>

<p>⌥</p>

<h1>Editing</h1>

<ul>
<li>ESC, 自动完成

<h2>&ndash; 自动配对</h2></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TextMate随记一]]></title>
    <link href="http://jenux.github.io/blog/2011/07/29/TextMate_knowlage_1/"/>
    <updated>2011-07-29T00:00:00+08:00</updated>
    <id>http://jenux.github.io/blog/2011/07/29/TextMate_knowlage_1</id>
    <content type="html"><![CDATA[<p><a href="http://goo.gl/q8GMJ">Textmate.Power.Editing.for.the.Mac</a>随手记</p>

<!-- more -->


<ul>
<li>Ctrl + esc 打开底部当前文件菜单</li>
<li>Ctrl + Option + Command + D 显示/隐藏工程列表 [ View->Hide Project Drawer ]</li>
<li>Ctrl + Tab 在工程列表和编辑窗口间切换光标焦点</li>
<li>在工程列表中, 上下箭头选择不同的文件， 左右箭头可以打开或折叠选中的文件夹</li>
<li>在工程列表中, 在选中的文件上单击回车，以编辑文件</li>
<li>在工程列表中, 在选中的文件上单击空格，以编辑文件名称</li>
<li>Command + T 打开已知文件名的文件 [ Navigation->Go to file ]</li>
<li>Commant + 数字 选中编辑框中的tab</li>
<li>Option + Command + 左右箭头, 左右切换tab</li>
</ul>


<hr />

<ul>
<li>⌂ ⌘F, 全文查找/替换</li>
<li>⌘F, 打开文件</li>
<li>⌘G, 继续上次查找</li>
<li>ESC, 代码补全</li>
<li>⌘⏎, 到行尾然后回车</li>
<li>⌃⌂K, 删除当前行</li>
<li>⌃⌂D, 复制并粘贴当前行
⌘C, 复制多次会将历史全部保存到Clipboard, ⌃ ⌥ ⌘V列出所有历史选择粘贴</li>
</ul>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Css3之Media Queries相关样式]]></title>
    <link href="http://jenux.github.io/blog/2011/07/24/css3_media_queries/"/>
    <updated>2011-07-24T00:00:00+08:00</updated>
    <id>http://jenux.github.io/blog/2011/07/24/css3_media_queries</id>
    <content type="html"><![CDATA[<p>本篇是《HTML5与CSS3权威指南》(HTML5 and CSS3: The Definitive Guide)一书第21章的笔记。</p>

<!-- more -->


<hr />

<h1>1. 根据浏览器的窗口大小来选择使用不同的样式</h1>

<ul>
<li>CSS中，与媒体相关的样式定义从CSS2.1开始。 CSS2.1中定义了各种媒体类型，如显示器，便携设备，电视机等。</li>
<li>CSS3中，加入Media Queries模块，允许添加媒体查询(media query)表达式,用以指定媒体类型，然后根据媒体类型来选择应该使用的样式。<br/>
即，不改变内容的情况下，在样式中选择一种页面的布局以精确适应不同设备。</li>
</ul>


<h1>2. 在iPhone中的显示</h1>

<p>iPhone 3GS分辨率是320 x 480, 在文中示例中打开demo页，却不是以设置的小布局渲染页面。因为iPhone中使用的safari显示页面时将窗口宽度作为980px来显示。 这种情况下，可以利用<code>&lt;meta&gt;</code>标签在页面中指定safari在处理本页面时按照多少像素的窗口宽度来进行:</p>

<pre><code>&lt;meta name="viewport" content="width=600px"&gt;
待测试: &lt;meta name="viewport" content="width=device-width"&gt;
</code></pre>

<h1>3. Media Queries的使用方法</h1>

<pre><code>@media 设备类型 and (设备特性) { 样式代码 }
</code></pre>

<ul>
<li>在Media Queries中可以指定的值与该值所代表的设备类型</li>
</ul>


<table>
<thead>
<tr>
<th></th>
<th align="left"> 可以指定的值        </th>
<th align="left"> 设备类型                    </th>
<th>  </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"> all           </td>
<td align="left"> 所有设备                    </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> screen        </td>
<td align="left"> 电脑显示器                   </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> print         </td>
<td align="left"> 打印用纸或打印预览视图             </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> handheld      </td>
<td align="left"> 便携设备                    </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> tv            </td>
<td align="left"> 电视机类型的设备                </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> speech        </td>
<td align="left"> 语音和音频合成器                </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> braille       </td>
<td align="left"> 盲人用点字法触觉回馈设备            </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> embossed      </td>
<td align="left"> 盲文打印机                   </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> projection    </td>
<td align="left"> 各种投影设备                  </td>
<td>  </td>
</tr>
<tr>
<td></td>
<td align="left"> tty           </td>
<td align="left"> 使用固定密度字母栅格的媒介， 如电传打字机和终端</td>
<td>  </td>
</tr>
</tbody>
</table>


<ul>
<li>Css中的设备特性共13种</li>
</ul>


<table>
<thead>
<tr>
<th></th>
<th align="left"> 特性                  </th>
<th align="left"> 可指定的值                 </th>
<th align="center"> 是否允许min/max前缀  </th>
<th align="left"> 特性说明                                 </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">width                </td>
<td align="left"> 带单位长度值:如400px         </td>
<td align="center"> 是              </td>
<td align="left"> 浏览器窗口的宽度                             |</td>
</tr>
<tr>
<td></td>
<td align="left">height               </td>
<td align="left"> 同上                    </td>
<td align="center">                </td>
<td align="left"> 浏览器窗口的高度                             |</td>
</tr>
<tr>
<td></td>
<td align="left">device-width         </td>
<td align="left"> 同上                    </td>
<td align="center">                </td>
<td align="left"> 设备屏幕分辨率的宽度值                          |</td>
</tr>
<tr>
<td></td>
<td align="left">device-height        </td>
<td align="left"> 同上                    </td>
<td align="center">                </td>
<td align="left"> 设备屏幕分辨率的高度值                          |</td>
</tr>
<tr>
<td></td>
<td align="left">orientation          </td>
<td align="left"> portrait或landscape    </td>
<td align="center"> 否              </td>
<td align="left"> 浏览器窗口方向，高度大于宽度时为portrait             |</td>
</tr>
<tr>
<td></td>
<td align="left">aspect-radio         </td>
<td align="left"> 比例值:如16/9             </td>
<td align="center">                </td>
<td align="left"> 浏览器窗口纵横比，宽度/高度                       |</td>
</tr>
<tr>
<td></td>
<td align="left">device-aspect-radio  </td>
<td align="left"> 同上                    </td>
<td align="center">                </td>
<td align="left"> 屏幕分辨率纵横比，宽度/高度                       |</td>
</tr>
<tr>
<td></td>
<td align="left">color                </td>
<td align="left"> 整数值                   </td>
<td align="center">                </td>
<td align="left"> 设备使用多少位的颜色值，如果不是彩色设备，该值为0            |</td>
</tr>
<tr>
<td></td>
<td align="left">color-index          </td>
<td align="left"> 同上                    </td>
<td align="center">                </td>
<td align="left"> 色彩表中的色彩数                             |</td>
</tr>
<tr>
<td></td>
<td align="left">monochrome           </td>
<td align="left"> 同上                    </td>
<td align="center">                </td>
<td align="left"> 单色帧缓冲器中每像素的字节数                       |</td>
</tr>
<tr>
<td></td>
<td align="left">resolution           </td>
<td align="left"> 分辨率值，如300dpi          </td>
<td align="center">                </td>
<td align="left"> 设备分辨率                                |</td>
</tr>
<tr>
<td></td>
<td align="left">scan                 </td>
<td align="left"> progressive或interlace </td>
<td align="center"> 否              </td>
<td align="left"> 电视类型扫描方式，progressive逐行扫描             |</td>
</tr>
<tr>
<td></td>
<td align="left">grid                 </td>
<td align="left"> 0或1                   </td>
<td align="center"> 否              </td>
<td align="left"> 设备是基于樱格还是基于位图，基于栅格时为1                |</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5高级编程之Canvas API]]></title>
    <link href="http://jenux.github.io/blog/2011/05/13/pro_html5_programming_cavans_api/"/>
    <updated>2011-05-13T00:00:00+08:00</updated>
    <id>http://jenux.github.io/blog/2011/05/13/pro_html5_programming_cavans_api</id>
    <content type="html"><![CDATA[<h1>Canvas是什么</h1>

<ol>
<li><p>基本元素
<code>&lt;canvas&gt;&lt;/canvas&gt;</code></p></li>
<li><p>canvas坐标
从左上角开始，x轴沿水平方向向右延伸， y轴沿垂直方向向下延伸， 左上角坐标为x=0,y=0，称为原点</p></li>
<li><p>替代内容
<code>&lt;canvas&gt;Update your browser to enjoy canvas!&lt;/canvas&gt;</code></p></li>
</ol>


<h1>HTML5 Canvas API</h1>

<ol>
<li><p>检测浏览器支持情况
 try{
     document.createElement(&lsquo;canvas&rsquo;).getContext(&lsquo;2d&rsquo;);
 }catch(e){
     //
 }</p></li>
<li><p>页历中加入canvas
 <code>&lt;canvas width='200' height='200' style=''&gt;&lt;/canvas&gt;</code></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5高级编程之概述]]></title>
    <link href="http://jenux.github.io/blog/2011/05/12/pro_html5_programming_intro/"/>
    <updated>2011-05-12T00:00:00+08:00</updated>
    <id>http://jenux.github.io/blog/2011/05/12/pro_html5_programming_intro</id>
    <content type="html"><![CDATA[<h1>新的认识</h1>

<p>HTML5基于各种各样的理念进行设计，这些设计理念体现了对可能性和可行性的新认识。<br/>
&ndash; 兼容性
&ndash; 实用性
&ndash; 互通性
&ndash; 通用访问性</p>

<!-- more -->


<ol>
<li><p>兼容性
HTML5不是颠覆性的革新，其核心理念是保持一切新特性平滑过渡。</p></li>
<li><p>效率和用户优先
在遇到无法解决的冲突时，规范会把用户放在第一位， 其次是页面作者，再次是实现者(或浏览器),接着是规范制定者，最后才考虑理论的纯粹性。<br/>
下面几种代码写法在HTML5中都能被识别:<br/>
 id=&lsquo;prohtml5'<br/>
 id=prohtml5<br/>
 id=&ldquo;prohtml5&rdquo;</p></li>
<li><p>化繁为简
HTML5要的就是简单，避免不必要的复杂性，口号是“简单至上，尽可能简化”，有以下改进：</p></li>
<li>以浏览器原生能力替代复杂的javascript代码</li>
<li>新的简化的DOCTYPE</li>
<li>新的简化的字符集声明</li>
<li><p>简单而强大的HTML5 API</p></li>
<li><p>通用访问</p></li>
<li>可访问性<br/>
出于对残障用户的考虑，HTML5与WAI(Web Accessibility Initiative,Web可访问性倡议)和ARIA(Accessible Rich Internet Applications,可访问的富Internet应用)做到了紧密结合，WAI-ARIA中以屏幕阅读器为基础元素已经被添加到HTML中。</li>
<li>媒体中立
如果可能的话，HTML5的功能在所有不同的设备和平台上应该都能正常运行。</li>
<li>支持所有语种
如，新的<code>&lt;ruby&gt;</code>元素支持在东亚页面排版中会用到的Ruby注释</li>
</ol>


<h1>无插件范式</h1>

<h1>HTML5新功能</h1>

<ol>
<li><p>新的DOCTYPE和字符集
<code>&lt;!DOCTYPE html&gt;</code><br/>
<code>&lt;meta charset='utf-8'&gt;</code></p></li>
<li><p>新元素和旧元素</p></li>
</ol>


<hr />

<p>内容类型        描述</p>

<hr />

<p>内嵌          向文档中添加其他类型的内容，如audio, video, canvas和iframe等<br/>
流           在文档和应用的body中使用的元素，如form, h1和small等<br/>
标题          段落标题，如h1, h2和hgroup等<br/>
交互          与用户交互的内容，如音频和视频的控件，button和textarea等<br/>
元数据         通常出现在页面head中，设置页面其他部分的表现和行为，如script, style和title等<br/>
短语          文本和文本票房，如mark, kbd, sub和sup等<br/>
片断          用于定义页面片断的元素，如article, aside和title等</p>

<hr />

<ol>
<li>语义化标记
HTML5中新的片断类元素</li>
</ol>


<hr />

<p>元素名         描述</p>

<hr />

<p>header      标记头部区域内容<br/>
footer      标记脚部区域内容<br/>
section     web页面中的一块区域<br/>
article     独立的文章内容<br/>
aside       相关内容或引文<br/>
nav         导航类辅助内容</p>

<hr />

<ol>
<li>使用Selectors API简化选取操作</li>
</ol>


<p>新QuerySelector方法</p>

<hr />

<p>函数                  描述                  示例                                          <br/>
querySelector()     根据规则，返回找到的第一个匹配元素   <code>querySelector("input.error")</code>
querySelectorAll()  根据规则，返回所有匹配的元素      <code>querySelectorAll('#results td')</code></p>

<hr />

<p>可为Selector API同时批定多个选择规则，如:<br/>
<code>var x = document.querySelector('.highlight', '.lowClass');</code><br/>
对querySelector来说，选择的是满足规则中任意条件的第一个元素，<br/>
对于querySelectorAll来说，选择的是只要满足规则中任何一个条件的元素</p>

<h1>资源</h1>

<ul>
<li><p><a href="http://www.caniuse.com">www.caniuse.com</a>
按浏览器的版本提供了详尽的html5的功能支持情况</p></li>
<li><p><a href="http://www.html5tst.com">html5test.com</a>
用浏览器访问该网站，会直接显示用户浏览器对HTML5规范支持情况</p></li>
<li><p><strong><a href="http://www.modernizr.com">Modernizr</a></strong>
提供非常先进的HTML5和CSS3检测功能</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
